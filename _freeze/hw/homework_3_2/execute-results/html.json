{
  "hash": "c360af518c52aadf8d106ae51d40032c",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Time Series Homework: Chapter 3 Lesson 2\"\nsubtitle: \"Eduardo Ramirez\"\nformat: \n  html:\n    error: false\n    message: false\n    warning: false\n    embed-resources: true\n    toc: true\n    code-fold: true\n---\n\n::: {.cell}\n\n:::\n\n\n\n\n\n## Data\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbuild_dat <- rio::import(\"https://byuistats.github.io/timeseries/data/mortality_us.xlsx\")\n```\n:::\n\n\n\n\n\n## Questions\n\n### Question 1 - Context and Measurement (10 points)\n\nThe first part of any time series analysis is context. You cannot properly analyze data without knowing what the data is measuring. Without context, the most simple features of data can be obscure and inscrutable. This homework assignment will center around the series below.\n\nPlease research the time series. In the spaces below, give the data collection process, unit of analysis, and meaning of each observation for the series.\n\n#### **US Mortality**\n\n<https://wonder.cdc.gov/wonder/help/cmf.html#>\n\nNote: The data is self-explanatory, don't get lost in the documentation page.\n\n::::: {.callout-note title=\"Answer\" icon=\"false\"}\nOverview data\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(\"tsibble\", \"fable\", \"feasts\",\n    \"tsibbledata\", \"fable.prophet\", \"tidyverse\", \"patchwork\")\nbuild_dat <- rio::import(\"https://byuistats.github.io/timeseries/data/mortality_us.xlsx\") |>\n    rename(\n        mort = \"mort_rate_per_100,000\",\n        index = year  # rename `year` to `index`\n    ) |>\n    mutate(\n        mort = as.numeric(mort),\n        deaths = as.numeric(deaths)\n    ) |>\n    as_tsibble(index = index)  # set `index` as the tsibble index\n```\n:::\n\n\n\n\n\n::: {.callout-note title=\"Answer\" icon=\"false\"}\nI ask chatgpt or help plotting this do to differences in the y scale.\n\nChatgpt: In this `ggplot`, `mort` and `deaths` are plotted on dual y-axes to allow simultaneous visualization despite differing scales. `deaths` is linearly scaled to align with `mort` values on the primary y-axis, while a secondary y-axis reverses this transformation to reflect `deaths` on its natural scale. This approach allows for direct visual comparison of trends and seasonalities in both variables over a common time index, facilitating insight into potential covariation and relative dynamics across time.\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Calculate the scaled deaths for the secondary axis\nmax_mort <- max(build_dat$mort, na.rm = TRUE)\nmax_deaths <- max(build_dat$deaths, na.rm = TRUE)\nbuild_dat <- build_dat %>%\n    mutate(scaled_deaths = deaths / max_deaths * max_mort)\n\n# Plot with dual y-axes\nmort_series_plot <- ggplot(build_dat, aes(x = index)) +\n    geom_line(aes(y = mort, color = \"Mortality\")) +\n    geom_line(aes(y = scaled_deaths, color = \"Deaths\")) +  # Use scaled deaths for plotting\n    scale_y_continuous(\n        name = \"Mortality\",\n        sec.axis = sec_axis(~ . * max_deaths / max_mort, name = \"Deaths\")  # Secondary axis transformation\n    ) +\n    scale_color_manual(values = c(\"Mortality\" = \"blue\", \"Deaths\" = \"red\")) +\n    theme(legend.position = \"bottom\") +\n    labs(color = \"Legend\")\nmort_series_plot\n```\n\n::: {.cell-output-display}\n![](homework_3_2_files/figure-html/time series object plot-1.png){width=672}\n:::\n:::\n\n\n\n\n:::\n\n::: {.callout-note title=\"Answer\" icon=\"false\"}\nnext part\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nacf_appr <- ACF(build_dat, y = mort) |> autoplot() +\n    labs(title = \"mort\")\nacf_act <- ACF(build_dat, y = deaths) |> autoplot() +\n    labs(title = \"deaths\")\njoint_ccf_plot <- build_dat |>\n  CCF(y = mort, x = deaths) |> autoplot() +\n  labs(title = \"CCF Plot\")\n(acf_appr + acf_act) / joint_ccf_plot\n```\n\n::: {.cell-output-display}\n![](homework_3_2_files/figure-html/Correlogram and cross-correlogram-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nCCF(build_dat, mort, deaths)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tsibble: 29 x 2 [1Y]\n        lag    ccf\n   <cf_lag>  <dbl>\n 1     -14Y 0.0883\n 2     -13Y 0.0799\n 3     -12Y 0.0586\n 4     -11Y 0.0452\n 5     -10Y 0.0448\n 6      -9Y 0.0457\n 7      -8Y 0.0467\n 8      -7Y 0.0463\n 9      -6Y 0.0409\n10      -5Y 0.0253\n# ℹ 19 more rows\n```\n\n\n:::\n:::\n\n\n\n\n\nnext part\n\nI ran into a no season error when doing the classical decomposition, this is probably why Bro. Moncayo ask us how we can do a classical decomposition without the tred\n\nhere is chatgpt's notes\n\nThe error occurs because the `feasts::classical_decomposition()` function requires multiple observations per period to detect seasonality, but with only one observation per year, no seasonal pattern can be extracted, resulting in a `null_mdl` object that causes further processing errors.\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Fit trend models to the data\napp_model <- build_dat %>%\n    model(trend_model = TSLM(mort ~ trend()))\n\nact_model <- build_dat %>%\n    model(trend_model = TSLM(deaths ~ trend()))\n\n# Extract the fitted values and residuals using augment()\napp_decompose <- app_model %>%\n    augment() %>%\n    select(index, mort, trend = .fitted, remainder = .resid)\n\nact_decompose <- act_model %>%\n    augment() %>%\n    select(index, deaths, trend = .fitted, remainder = .resid)\n\n# Plot the ACF of the remainder components\napp_random <- ACF(app_decompose, remainder) %>% autoplot() +\n    labs(title = \"ACF of Mortality Remainder\")\n\nact_random <- ACF(act_decompose, remainder) %>% autoplot() +\n    labs(title = \"ACF of Deaths Remainder\")\n\n# Merge the remainder components for cross-correlation analysis\nrandom_decompose <- app_decompose %>%\n    select(index, random_app = remainder) %>%\n    left_join(\n        act_decompose %>% select(index, random_act = remainder),\n        by = \"index\"\n    )\n\n# Plot the cross-correlation function between the remainder components\njoint_ccf_random <- random_decompose %>%\n    CCF(y = random_app, x = random_act) %>%\n    autoplot() +\n    labs(title = \"CCF between Mortality and Deaths Remainders\")\n\n# Display the plots\nlibrary(patchwork)\n(app_random + act_random) / joint_ccf_random\n```\n\n::: {.cell-output-display}\n![](homework_3_2_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\n\n\n\nnotes on the error with seasonalities for this dataset:The error arose because the classical decomposition necessitates multiple observations within each seasonal cycle, which isn't feasible with annual data devoid of seasonality; we resolved this by applying a time series linear model (TSLM) to capture the trend component and utilized augment() to extract residuals for subsequent analysis. By shifting from a decomposition method requiring seasonality to a trend-focused model, we circumvented the limitations imposed by the data's temporal granularity.\n:::\n:::::\n\n### Question 2 - US Mortality Rate: Visualization (30 points)\n\n##### a) Please plot the US Mortality Rate series (mortality per 100,000).\n\n::: {.callout-note title=\"Answer\" icon=\"false\"}\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load required libraries\npacman::p_load(\"tsibble\", \"fable\", \"feasts\",\n    \"tsibbledata\", \"fable.prophet\", \"tidyverse\", \"patchwork\")\n\n# Import and rename the data\nmotor_dat <- rio::import(\"https://byuistats.github.io/timeseries/data/mortality_us.xlsx\") |>\n    rename(\n        mort = \"mort_rate_per_100,000\",\n        index = year  # rename `year` to `index`\n    ) |>\n    mutate(\n        mort = as.numeric(mort),\n        deaths = as.numeric(deaths)\n    ) |>\n    as_tsibble(index = index)\n\n# Task 1: Plot the US Mortality Rate series (mortality per 100,000)\nautoplot(motor_dat, mort) +\n    labs(x = \"Year\", y = \"Mortality Rate per 100,000\") +\n    ggtitle(\"US Mortality Rate Over Time\")\n```\n\n::: {.cell-output-display}\n![](homework_3_2_files/figure-html/plot Mort rate series-1.png){width=672}\n:::\n:::\n\n\n\n\n:::\n\n##### b) Use the exponential smoothing method to model the US Mortality Rate series. Use the smoothing parameter that R calculates by minimizing the SS1PE. Add it to the plot in 2a\n\n::: {.callout-note title=\"Answer\" icon=\"false\"}\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Task 2: Exponential Smoothing with R's Optimized Smoothing Parameter\n# Assuming R’s alpha (0.1429622) was calculated to minimize SS1PE\nmotor_dat1 <- motor_dat |>\n    model(Optimized = ETS(mort ~\n        trend(\"A\", alpha = 0.1429622, beta = 0) +\n        error(\"A\") +\n        season(\"N\"),\n        opt_crit = \"amse\", nmse = 1))\n\n# Plot the optimized model\naugment(motor_dat1) |>\n    ggplot(aes(x = index, y = mort)) +\n    geom_line() +\n    geom_line(aes(y = .fitted, color = \"Fitted - Optimized Alpha\")) +\n    labs(color = \"\") +\n    ggtitle(\"Exponential Smoothing with Optimized Alpha\")\n```\n\n::: {.cell-output-display}\n![](homework_3_2_files/figure-html/EWMA - Exponential Smoothing-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# Task 3: Exponential Smoothing with α = 0.2\nmotor_dat2 <- motor_dat |>\n    model(FixedAlpha0_2 = ETS(mort ~\n        trend(\"A\", alpha = 0.2, beta = 0) +\n        error(\"A\") +\n        season(\"N\"),\n        opt_crit = \"amse\", nmse = 1))\n\n# Plot the α = 0.2 model alongside the previous\naugment(motor_dat2) |>\n    ggplot(aes(x = index, y = mort)) +\n    geom_line() +\n    geom_line(aes(y = .fitted, color = \"Fitted - Alpha = 0.2\")) +\n    labs(color = \"\") +\n    ggtitle(\"Exponential Smoothing with Alpha = 0.2\")\n```\n\n::: {.cell-output-display}\n![](homework_3_2_files/figure-html/EWMA - Exponential Smoothing-2.png){width=672}\n:::\n\n```{.r .cell-code}\n# Task 4: Exponential Smoothing with α = 1/n (where n is the number of observations)\nalpha_value <- 1 / nrow(motor_dat)\nmotor_dat3 <- motor_dat |>\n    model(FixedAlpha1_n = ETS(mort ~\n        trend(\"A\", alpha = alpha_value, beta = 0) +\n        error(\"A\") +\n        season(\"N\"),\n        opt_crit = \"amse\", nmse = 1))\n\n# Plot the α = 1/n model along with previous models\naugment(motor_dat3) |>\n    ggplot(aes(x = index, y = mort)) +\n    geom_line() +\n    geom_line(aes(y = .fitted, color = paste(\"Fitted - Alpha =\", round(alpha_value, 4)))) +\n    labs(color = \"\") +\n    ggtitle(paste(\"Exponential Smoothing with Alpha =\", round(alpha_value, 4)))\n```\n\n::: {.cell-output-display}\n![](homework_3_2_files/figure-html/EWMA - Exponential Smoothing-3.png){width=672}\n:::\n:::\n\n\n\n\n:::\n\n##### c) Please repeat the modeling above but instead choose a smoothing parameter value $\\alpha=0.2$. Add it to the plot in 2a\n\n::: {.callout-note title=\"Answer\" icon=\"false\"}\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Task 3: Exponential Smoothing with α = 0.2\nmotor_dat2 <- motor_dat |>\n    model(FixedAlpha0_2 = ETS(mort ~\n        trend(\"A\", alpha = 0.2, beta = 0) +\n        error(\"A\") +\n        season(\"N\"),\n        opt_crit = \"amse\", nmse = 1))\n\n# Plot the α = 0.2 model alongside the previous\naugment(motor_dat2) |>\n    ggplot(aes(x = index, y = mort)) +\n    geom_line() +\n    geom_line(aes(y = .fitted, color = \"Fitted - Alpha = 0.2\")) +\n    labs(color = \"\") +\n    ggtitle(\"Exponential Smoothing with Alpha = 0.2\")\n```\n\n::: {.cell-output-display}\n![](homework_3_2_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\n\n\n:::\n\n##### d) Please repeat the modeling above but instead choose a smoothing parameter value $\\alpha=\\frac{1}{n}$.Add it to the plot in 2a\n\n::: {.callout-note title=\"Answer\" icon=\"false\"}\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Task 4: Exponential Smoothing with α = 1/n (where n is the number of observations)\nalpha_value <- 1 / nrow(motor_dat)\nmotor_dat3 <- motor_dat |>\n    model(FixedAlpha1_n = ETS(mort ~\n        trend(\"A\", alpha = alpha_value, beta = 0) +\n        error(\"A\") +\n        season(\"N\"),\n        opt_crit = \"amse\", nmse = 1))\n\n# Plot the α = 1/n model along with previous models\naugment(motor_dat3) |>\n    ggplot(aes(x = index, y = mort)) +\n    geom_line() +\n    geom_line(aes(y = .fitted, color = paste(\"Fitted - Alpha =\", round(alpha_value, 4)))) +\n    labs(color = \"\") +\n    ggtitle(paste(\"Exponential Smoothing with Alpha =\", round(alpha_value, 4)))\n```\n\n::: {.cell-output-display}\n![](homework_3_2_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n\n\n\n:::\n\n##### d) Which of the smoothing parameter values you tried before work best for the series? Justify your answer.\n\n::: {.callout-note title=\"Answer\" icon=\"false\"}\nThe smoothing parameter that provided the best fit was the optimized α value (0.1429622), as it minimized the Sum of Squared One-Step Prediction Errors (SS1PE). In comparison, fixed α values like 0.2 and α= 1/n​ either over-smoothed or under-smoothed the series, making the optimized α most effective for accurate modeling of the mortality rate series.\n:::\n\n### Question 5 - US Mortality Rate: Excess Mortality (30 points)\n\nThe jump at the last two years of the US Mortality Rate series is clearly the effect that Covid-19 had on mortality across the US.\n\n##### a) Please calculate the excess mortality rate during 2020 and 2021 using the smoothing parameter values you employed in the previous question. Your results should be displayed in a table that is professionally formatted.\n\n::: {.callout-note title=\"Answer\" icon=\"false\"}\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Task 1: Calculate the Excess Mortality for 2020 and 2021\n\n# Extract observed data for 2020 and 2021\nobserved_2020_2021 <- motor_dat |> filter(index >= 2020)\n\n# Calculate fitted (expected) values for each model\nfitted_optimized <- augment(motor_dat1) |> filter(index >= 2020) |> pull(.fitted)\nfitted_alpha_0_2 <- augment(motor_dat2) |> filter(index >= 2020) |> pull(.fitted)\nfitted_alpha_1_n <- augment(motor_dat3) |> filter(index >= 2020) |> pull(.fitted)\n\n# Calculate excess mortality by comparing actual rates with fitted (expected) rates\nexcess_optimized <- observed_2020_2021$mort - fitted_optimized\nexcess_alpha_0_2 <- observed_2020_2021$mort - fitted_alpha_0_2\nexcess_alpha_1_n <- observed_2020_2021$mort - fitted_alpha_1_n\n\n# Prepare a formatted table to display the results\nexcess_mortality_table <- tibble(\n    Year = observed_2020_2021$index,\n    Observed_Mortality = observed_2020_2021$mort,\n    Excess_Optimized = excess_optimized,\n    Excess_Alpha_0_2 = excess_alpha_0_2,\n    Excess_Alpha_1_n = excess_alpha_1_n\n)\n\n# Display the formatted table for review\nexcess_mortality_table_formatted <- excess_mortality_table |>\n    rename(\n        \"Year\" = Year,\n        \"Observed Mortality Rate\" = Observed_Mortality,\n        \"Excess Mortality (Optimized Alpha)\" = Excess_Optimized,\n        \"Excess Mortality (Alpha = 0.2)\" = Excess_Alpha_0_2,\n        \"Excess Mortality (Alpha = 1/n)\" = Excess_Alpha_1_n\n    )\n\n# Print the formatted table\nexcess_mortality_table_formatted\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2 × 5\n   Year `Observed Mortality Rate` Excess Mortality (Opt…¹ Excess Mortality (Al…²\n  <dbl>                     <dbl>                   <dbl>                  <dbl>\n1  2020                     1027                     189.                   182.\n2  2021                     1044.                    179.                   162.\n# ℹ abbreviated names: ¹​`Excess Mortality (Optimized Alpha)`,\n#   ²​`Excess Mortality (Alpha = 0.2)`\n# ℹ 1 more variable: `Excess Mortality (Alpha = 1/n)` <dbl>\n```\n\n\n:::\n:::\n\n\n\n\n:::\n\n##### b) What is the meaning of excess mortality as you calculated it? Please explain it to a general audience, as if you were being interviewed in a national news show.\n\n::: {.callout-note title=\"Answer\" icon=\"false\"}\n**Excess mortality** refers to the number of deaths occurring above what would normally be expected in a given period based on historical trends. For example, if we typically expect around 800 deaths per 100,000 people each year, but we observe 1,000 per 100,000 during 2020 and 2021, the excess mortality would be 200 per 100,000. This difference often reflects the impact of unusual events or crises, such as the Covid-19 pandemic, which led to an increase in mortality rates beyond what we would normally see.\n:::\n\n##### c) Which excess mortality rate estimate do you think is correct? Some commentators would suggest you are choosing the parameters to defend your political goals, not to conduct a scientific analysis. Please comment on the difficulty of choosing parameter values to estimate the death toll of Covid-19.\n\n::: {.callout-note title=\"Answer\" icon=\"false\"}\nEstimating excess mortality is challenging because it requires selecting parameters that balance responsiveness to sudden changes (like a pandemic) with stability over time. In our analysis, we used three different parameter values: one optimized based on historical trends, one set at a moderate value (α = 0.2), and one based on a conservative approach (α = 1/n) that assumes slow change.\n\nEach choice reflects different assumptions about how mortality rates are likely to change over time. An optimized parameter aims to minimize errors but may overly fit past data, while a fixed parameter like 0.2 provides moderate sensitivity. The most conservative option, `1/n`, smooths the data more aggressively, underemphasizing sudden increases.\n\nChoosing parameters isn’t about political bias but about finding a balance that reflects reality as closely as possible. It is, however, a difficult task: too much responsiveness may exaggerate changes, while too little may underestimate significant shifts.\n:::\n\n### Rubric\n\n|  |  |  |\n|------------------------|------------------------|------------------------|\n| **Criteria** | **Mastery (10)** | **Incomplete (0)** |\n| **Question 1: Context and Measurement** | The student thoroughly researches the data collection process, unit of analysis, and meaning of each observation for both the requested time series. Clear and comprehensive explanations are provided. | The student does not adequately research or provide information on the data collection process, unit of analysis, and meaning of each observation for the specified series. |\n|  | **Mastery (5)** | **Incomplete (0)** |\n| **Question 2a: Mortality Plot** | The student accurately plots the US Mortality Rate series in R, ensuring clear labeling and a descriptive title for easy interpretation. The visualization effectively presents the data with distinguishable points or lines and appropriate formatting. Additionally, the R code is well-commented, providing clear explanations of each step and maintaining readability. | The student encounters challenges in plotting the US Mortality Rate series in R. The plot may lack essential labels or a descriptive title, making it difficult to interpret. Additionally, the visualization might be unclear or cluttered, and the R code may lack sufficient comments, hindering understanding of the process. Overall, improvement is needed in effectively plotting time series data in R. |\n|  | **Mastery (5)** | **Incomplete (0)** |\n| **Question 2b: Smoothing SS1PE** | Students use R to compute exponential smoothing for modeling the US Mortality Rate series. Their R code is well-commented, providing clear explanations for each step of the process, ensuring transparency in the computational process. | Students may encounter challenges in implementing exponential smoothing in R, resulting in incomplete or ineffective computations. Their R code might lack sufficient comments, hindering clarity in understanding the computational process. |\n|  | **Mastery (5)** | **Incomplete (0)** |\n| **Question 2c: Smoothing a=0.2** | Students employ R to repeat the modeling of the US Mortality Rate series using a specified smoothing parameter value of alpha=0.2. Their R code is well-commented, providing clear explanations for each step of the process, ensuring transparency in the computational process. | Students may encounter challenges in implementing exponential smoothing in R, resulting in incomplete or ineffective computations. Their R code might lack sufficient comments, hindering clarity in understanding the computational process. |\n|  | **Mastery (5)** | **Incomplete (0)** |\n| **Question 2d: Smoothing a=1/n** | Students employ R to repeat the modeling of the US Mortality Rate series using a specified smoothing parameter value of alpha=1/n. Their R code is well-commented, providing clear explanations for each step of the process, ensuring transparency in the computational process. | Students may encounter challenges in implementing exponential smoothing in R, resulting in incomplete or ineffective computations. Their R code might lack sufficient comments, hindering clarity in understanding the computational process. |\n|  | **Mastery (10)** | **Incomplete (0)** |\n| **Question 2d: Evaluation of Parameter Choice** | Students justify their choice of parameter in the context of the underlying factors affecting US Mortality Rates evident in the data. The students evidence their understanding of the implications of the values in the smoothing parameter. Students show they have done some background research into the data to answer the question. | Students fail to adequately justify their choice of parameter in relation to the underlying factors affecting US Mortality Rates evident in the data. They may lack evidence of understanding the implications of the values in the smoothing parameter or fail to demonstrate how these implications relate to the context of the data. Additionally, they may show limited evidence of background research into the data to support their justification, indicating a lack of depth in their analysis. |\n|  | **Mastery (10)** | **Incomplete (0)** |\n| **Question 3a: Excess MortalityTable** | Students accurately calculate the excess mortality rate during 2020 and 2021 using the smoothing parameter values employed in the previous question. They present their results in table, clearly displaying the excess mortality rate for each year alongside the corresponding smoothing parameter values. The table is well-labeled and easy to interpret. | Students demonstrate inaccuracies in calculating the excess mortality rate during 2020 and 2021. Their presentation of the results in a table may lack clarity and professionalism, with issues such as unclear labeling, inconsistent formatting, or difficulty in interpreting the information provided. Additionally, they may overlook important details or fail to include all necessary information in the table, making it challenging for readers to understand the table. |\n|  | **Mastery (10)** | **Incomplete (0)** |\n| **Question 3b: Excess Mortality** | Explanations effectively convey the meaning of excess mortality to a general audience, avoiding technical terms and providing a clear, accessible description. They define excess mortality as the number of deaths observed during a specific period compared to what would be expected based on historical data. | Responses may struggle to explain excess mortality clearly to a general audience, potentially using technical language or lacking coherence. They may fail to provide relatable examples or context, making it difficult for the audience to understand the concept and its significance. |\n|  | **Mastery (10)** | **Incomplete (0)** |\n| **Question 3c: Evaluation of assumptions used for inference** | Responses address the challenge of selecting parameter values to make inference in time series. They provide a comprehensive analysis, considering factors like modeling assumptions, and methodological variations that influence parameter selection. Explanations highlight the need of transparent reporting to ensure robust and reliable estimates in professional discourse. | Below expectations, responses may lack depth or clarity in addressing the challenge of selecting parameter values for making inference in time series. They may overlook key factors influencing parameter selection, such as data quality or specific characteristics of the time series data. Additionally, they may not effectively consider the impact of modeling assumptions or methodological variations on parameter selection. Furthermore, they may fail to emphasize the importance of transparent reporting in ensuring the reliability and validity of estimates, potentially resulting in a lack of confidence in the conclusions drawn from the analysis. |\n| **Total Points** | **70** |  |\n",
    "supporting": [
      "homework_3_2_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}